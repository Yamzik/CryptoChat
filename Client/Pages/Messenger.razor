@page "/"

<PageTitle>Messenger</PageTitle>

<h1>Messenger</h1>

<div class="root">
    <div class="chat-tab"><ChatTab @ref=@chatTab /></div>
    <div class="message-tab"><MessageTab @ref=@msgTab /></div>
    <input @bind-value=@userTo type="text" placeholder="User to" />
    <div>
        <input type="text" @bind-value=@nickname />
        <button @onclick="@Register">Register</button>
    </div>
</div>

@code {
    public ChatTab chatTab;
    public MessageTab msgTab;
    private string nickname = "";
    private string userTo = "";
    protected override async Task OnInitializedAsync()
    {
        hubConnection.Remove("ReceiveMessage");
        /*hubConnection.On<string, string>("ReceiveMessage", (userFrom, message) =>
            {
                Message msg = new Message
                    {
                        id = 0,
                        from = userFrom,
                        text = message,
                        to = "me",
                        date = DateTime.Now,
                        route = MsgRoute.income,
                    };
                msgStack.AddMsg(msg);
            });*/
    }
    private async void Register()
    {
        if (hubConnection.State == HubConnectionState.Connected)
        {
            await hubConnection.SendAsync("Register", nickname);
        }
    }
}

<!--/*protected override async Task OnInitializedAsync()
    {
        Ws.On("ReceiveMessage", (user, message) =>
        {
            Message msg =
        });
    }*/-->
