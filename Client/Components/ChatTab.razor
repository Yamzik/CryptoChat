<div class="chat-tab-wrapper">
    <div class="profile-button" @onclick="@OnProfile">

    </div>
    <div class="search-wrapper">
        <InputWithButton @ref=@iwb onclick=@Find placeholder="Search..." ButtonText="Search" />
    </div>
    <div class="chat-list">
        @for (int i = 0; i < Global.chats.Count; i++)
        {
            Chat ch = Global.chats[i];
            ChatItem chatItem = new ChatItem { chat = ch };
            chats.Add(chatItem);
            <ChatItem @ref=chatItem chat=chatItem.chat />
        }
    </div>

</div>

@code {
    public List<ChatItem> chats { get; set; } = new List<ChatItem>();
    InputWithButton iwb = new InputWithButton();

    protected override void OnInitialized()
    {
        chats = Global.chats.Select(x => new ChatItem { chat = x }).ToList();

        Global.OnMessageReceived += (ch, msg) => { StateHasChanged(); };

        Global.OnInit += (currentUser) =>
        {
            var sub = Global.hub.On<User>("GetChat", (user) =>
                {
                    if (user == null) return;
                    else if (Global.chats.Any(x => x.companion.address == user.address)) return;
                    Chat ch = new Chat { companion = user, messages = new List<Message>() };
                    Global.chats.Add(ch);
                    StateHasChanged();
                });
        };
    }
    async void Find() { await Global.hub.SendAsync("GetChat", iwb.text); iwb.value = ""; }
    void OnProfile() => Global.InvokeOnProfileClick();
}
