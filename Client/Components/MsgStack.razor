<div class="msg-stack-wrapper">
    @if (chat != null &&
    chat.companion != null &&
    chat.companion.address != "")
    {
        <div>@chat?.companion?.address</div>
    }
    else
    {
        <div>no dialogue yet</div>
    }
    <div>
        @for (int i = 0; i < Global.currentChat.messages.Count; i++)
        {
            Message msg = Global.currentChat.messages[i];
            MsgBase mes = new MsgBase { message = msg };
            msgs.Add(mes);
            switch (mes.message.route)
            {
                case MsgRoute.income:
                    <MsgIn @ref=mes message=@mes.message />
                    break;
                case MsgRoute.outcome:
                    <MsgOut @ref=mes message=@mes.message />
                    break;
            }
        }
    </div>
</div>

@code {
    public List<MsgBase> msgs { get; set; } = new List<MsgBase>();
    public Chat chat;
    protected override void OnInitialized()
    {
        Global.OnMessageSent += (message) => StateHasChanged();
        Global.OnChatClicked += (_chat) => { chat = _chat; StateHasChanged(); };
        Global.OnMessageReceived += (ch, msg) => { if(ch.companion.address == chat.companion.address) StateHasChanged(); };
    }
}
